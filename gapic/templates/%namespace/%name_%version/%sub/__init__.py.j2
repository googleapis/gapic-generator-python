{% extends '_base.py.j2' %}

{% block content %}
{#  Import subpackages. -#}
{% for subpackage in api.subpackages.keys() -%}
from . import {{ subpackage }}
{% endfor -%}

{#  Import services for this package. -#}
{% filter sort_lines -%}
{% for service in api.services.values()|sort(attribute='name')
        if service.meta.address.subpackage == api.subpackage_view -%}
from .services.{{ service.name|snake_case }} import {{ service.client_name }}
{% endfor -%}
{% endfilter -%}

{#  Import messages and enums from each proto.
    It is safe to import all of the messages into the same namespace here,
    because protocol buffers itself enforces selector uniqueness within
    a proto package.
-#}
{% filter sort_lines -%}
{% for proto in api.protos.values()
        if proto.meta.address.subpackage == api.subpackage_view -%}
{% for message in proto.messages.values() -%}
from .types.{{ proto.module_name }} import {{ message.name }}
{% endfor -%}
{% for enum in proto.enums.values() -%}
from .types.{{ proto.module_name }} import {{ enum.name }}
{% endfor -%}
{% endfor -%}
{% endfilter %}

{#  Define __all__.
    This requires the full set of imported names, so we iterate over
    them again.
-#}
__all__ = (
    {%- filter sort_lines %}
    {%- for subpackage in api.subpackages.keys() %}
    '{{ subpackage }}',
    {%- endfor %}
    {%- for service in api.services.values()
            if service.meta.address.subpackage == api.subpackage_view %}
    '{{ service.client_name }}',
    {%- endfor %}
    {%- for proto in api.protos.values()
            if proto.meta.address.subpackage == api.subpackage_view %}
    {%- for message in proto.messages.values() %}
    '{{ message.name }}',
    {%- endfor %}
    {%- for enum in proto.enums.values() %}
    '{{ enum.name }}',
    {%- endfor %}
    {%- endfor %}
    {%- endfilter %}
)
{% endblock %}

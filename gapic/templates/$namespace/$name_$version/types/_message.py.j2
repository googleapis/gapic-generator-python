class {{ message.name }}({{ p }}.Message):
    """{{ message.meta.doc|rst(indent=4) }}"""
    {# Iterate over nested enums. -#}
    {% for enum in message.nested_enums.values() %}{% filter indent -%}
        {% include '$namespace/$name_$version/types/_enum.py.j2' %}
    {% endfilter %}{% endfor -%}

    {#- Iterate over nested messages. -#}
    {% for submessage in message.nested_messages.values() -%}
        {% with message = submessage %}{% filter indent %}
            {%- include '$namespace/$name_$version/types/_message.py.j2' %}
        {% endfilter %}{% endwith %}
    {% endfor -%}

    {# Iterate over fields. -#}
    {%- for field in message.fields.values() %}
    {{ field.name }} = {{ p }}.{% if field.repeated %}Repeated{% endif %}Field({{ p }}.{{ field.proto_type }}, number={{ field.number }}
    {%- if field.enum or field.message %},
        {{ field.proto_type.lower() }}={{ field.type.ident.context(proto).rel(message.ident) }},
    {% endif %})
    """{{ field.meta.doc|rst(indent=4) }}"""
    {% endfor %}

    class Meta:
        package = '{{ message.ident.proto_package }}'
{{ '\n\n' }}
